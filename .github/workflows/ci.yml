---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13]
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Cache uv dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Sync dependencies (locked)
        run: uv sync --all-extras

  lint:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v1
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --all-extras
      - name: Run pre-commit (excluding ruff and xenon)
        run: uv run pre-commit run --all-files
        env:
          PRE_COMMIT_EXCLUDE: '^(ruff|ruff-format|xenon)$'

  ruff:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v1
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --all-extras
      - run: uv run ruff check summarizer tests

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v1
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --all-extras
      - run: uv run pytest --cov=summarizer tests/

  bandit:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v1
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --all-extras
      - run: uv run bandit -r summarizer

  xenon:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v1
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --all-extras
      - run: uv run xenon --max-absolute B --max-modules B --max-average A summarizer
